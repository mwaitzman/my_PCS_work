For homework:
Write a simple calculator using React. User is presented with a calculator UI and can perform calculations by entering numbers and clicking buttons. You can start simple - maybe just addition, no decimals.., no typing, just pressing buttons, then given enough time add more operations and features..

It should be a simple one component (App) exercise mostly in handling user input and clicks. You can google ways to implement calculators, it's a very common exercise, but a simplistic approach might be to keep current user entered number as state initially 0 - so maybe initial state is {current: 0}, then if user presses for example the 5 key it becomes {current: 5} and then when user presses an "operator" (+ = * /) save the currently entered number as "total" as well as the selected operator - so if for example user then pressed + state becomes {total; 5, operator: '+'}) , then the user enters the next number (say they press 2) which again is saved as 'current" state, so we get {current:2, operator '+', total: 5} and then when they press = you take "total" and current current and perform "operator' on them (if + add if - subtract etc) so our example would be (5 + 2) = 7 and then update state with new {current: 7} to display new total.
Another example - we start with state {current: 0}. User presses 6. state is now {current: 6}. User presses -. State is now {total: 6, operator: -}. User presses 3. state is now {total: 6, operator: +, current: 3}. User presses =. We calculate total {operator} current (6 - 3) = 3 and update current and display with 3.

We aren't that concerned with making a "good" calculator. We don't really care if we handle every case (what if they press + twice in a row etc...) or if the UI experience is that great (though of course the better we can make it in a reasonable amount of time, the better). We really just want practice keeping state and handling user interactions, so in class we may not take the example very far once we get past enough to say we have practiced those concepts. (Keep in mind also that we still haven't seen the "correct" way to handle user input so for now continue to use "onblur" and then event.target.value to get any typed in input from the user.)
