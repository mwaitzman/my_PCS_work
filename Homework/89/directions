For homework please do the following:

    Using an array of students from last night's homework:
        Write a function printStudents that takes ANY amount of students (but not as an array) and prints their information out to the console. Allow the caller to specify whether to display the name as first, last or last, first. Use the rest operator to allow the variable amount of students to be passed in, as we did in the sum example in class. (You will need to accept the "name order" setting as a param before you use the rest operator to suck up the rest of params passed in by the caller. We talked about this in class but didn't actually do an example). 
        Call the printStudents function passing in your array of students. use the spread operator to pass the array as separate arguments just as we did when passing the numbers array to the sum example in class.
        Write a function that copies student info into a new object but swaps the first and last names (i.e the new object will have the original first name as its last name, and original last as its first). As an exercise in using the new features we saw last class, use destructuring and the rest operator to pull the data out of the original student, use the rest operator to help with creating the copy. This assignment is kind of difficult to explain without giving away the answer but basically try to copy out student info into a new object using all 3 new features while doing so, destructuring, spread operator, and rest operator. Dont spend too much time on this one if you can't figure it out.
    Using the ball example from class as a starting point, make a more advanced version, where the user can choose a color and a size (radius) and press a button to add a new ball of that color and radius to the screen that will begin bouncing. (To do this, you will probably want to keep an array of balls, and call draw for each ball, each interval. The actual balls can be simple objects just containing things like x, y, radius, dx, dy,and color, or even better, for practice using classes, write a ball class - with a draw method, so each ball can be told to draw itself)
    Write code to autosize the canvas to be "full screen". To do this, set the canvas width and height to be window.innerWidth and innerHeight. Additionally you can add an eventListener to the window listening for resize events and resize the canvas then as well so that even if the user adjusts the size of the browser window, the canvas will still be full screen (window.addEventListener('resize', ...)
